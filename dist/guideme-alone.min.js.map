{"version":3,"sources":["webpack:///guideme-alone.min.js","webpack:///webpack/bootstrap 47febb8d6b9e93133a3e","webpack:///./src/guideme.js","webpack:///./src/guideme-alone.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","0","global","factory","this","parseElemnt","element","defaultElement","fallToDefault","HTMLElement","NodeList","document","querySelector","$","jquery","parseSelector","selector","querySelectorAll","getWindowSize","e","documentElement","g","getElementsByTagName","width","window","innerWidth","clientWidth","height","innerHeight","clientHeight","createPopper","elDialog","stepTarget","cb","Popper","placement","onCreate","dataObject","classList","toggle","guidemeCenter","scrollIntoView","setTimeout","nvl","text","def","length","resolveFunctionOrValue","fnOrVal","_this","apply","Array","slice","arguments","ofTypeOrThrow","obj","type","error","stepComparer","stepA","stepB","isNaN","order","elementToStep","target","content","getAttribute","title","stringToStep","value","normalizeStep","step","index","getPopperRererenceCenter","modWidth","modHeight","getBoundingClientRect","size","bottom","left","right","top","formatStepCounter","format","replace","GuideMe","options","onKeyDown","event","preventDefault","keyCode","which","performAction","action","showStep","curStepIndex","done","cleanStepElement","stepList","elDialogTitle","innerHTML","instance","showStepCounter","elDialogStepCounter","elDialogBody","add","popper","destroy","onStep","remove","setupEvents","allowKeyboardNavigation","addEventListener","cleanEvents","removeEventListener","createOnStep","createOnDone","attachTo","onDone","destroyOnDone","elOverloay","removeChild","elBody","elDialogFooter","assign","defaultOptions","showOverlay","createElement","className","classes","onclick","overlayClickAction","toUpperCase","appendChild","elDialogHtml","buttons","map","btn","elButton","setAttribute","forEach","from","elStepList","els","ii","hasAttribute","push","jj","addStep","start","initialStep","sort","end","bind","stepAt","jQuery","writable","firstSource","undefined","TypeError","to","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","7","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__guideme_js__","__WEBPACK_IMPORTED_MODULE_0__guideme_js___default","a"],"mappings":"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","file":"guideme-alone.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n// import styles from './guideme.css'\n// import themeStyles from './guideme-theme.css'\n// import Popper from 'popper.js';\n\n(function(global, factory) {\n     true ? module.exports = factory() :\n        typeof define === 'function' && define.amd ? define(factory) :\n        (global.GuideMe = factory());\n}(this, (function() {\n    'use strict';\n\n    var $ = window && window.jQuery;\n\n    // @see https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    if (!Object.assign) {\n        Object.defineProperty(Object, 'assign', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: function(target, firstSource) {\n                'use strict';\n                if (target === undefined || target === null) {\n                    throw new TypeError('Cannot convert first argument to object');\n                }\n\n                var to = Object(target);\n                for (var i = 1; i < arguments.length; i++) {\n                    var nextSource = arguments[i];\n                    if (nextSource === undefined || nextSource === null) {\n                        continue;\n                    }\n                    nextSource = Object(nextSource);\n\n                    var keysArray = Object.keys(Object(nextSource));\n                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                        var nextKey = keysArray[nextIndex];\n                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                        if (desc !== undefined && desc.enumerable) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n                return to;\n            }\n        });\n    }\n\n    function parseElemnt(element, defaultElement, fallToDefault) {\n        if (!element) {\n            return defaultElement;\n        } else if (element instanceof HTMLElement) {\n            return element;\n        } else if (element instanceof NodeList) {\n            return element[0];\n        } else if (typeof element == 'string') {\n            return document.querySelector(element);\n        } else if ($ && element.jquery) {\n            return element.get(0);\n        } else if (fallToDefault) {\n            return defaultElement;\n        } else {\n            return null;\n        }\n    }\n\n    // ritorna null o un array di elementi\n    function parseSelector(selector) {\n        if (!selector) {\n            return null;\n        } else if (selector instanceof HTMLElement) {\n            return [selector];\n        } else if (selector instanceof NodeList) {\n            return selector;\n        } else if (typeof selector == 'string') {\n            return document.querySelectorAll(selector);\n        } else if ($ && selector.jquery) {\n            return selector.get();\n        } else {\n            return null;\n        }\n    }\n\n    function getBodySize() {\n        var w = document.body.clientWidth,\n            h = document.body.clientHeight;\n        return { \"width\": w, \"height\": h };\n    }\n\n    function getWindowSize() {\n        var e = document.documentElement,\n            g = document.getElementsByTagName('body')[0],\n            w = window.innerWidth || e.clientWidth || g.clientWidth,\n            h = window.innerHeight || e.clientHeight || g.clientHeight;\n        return { \"width\": w, \"height\": h };\n    }\n\n    function createPopper(elDialog, stepTarget, cb) {\n        return new Popper(stepTarget, elDialog, {\n            \"placement\": \"bottom-start\",\n            \"onCreate\": function(dataObject) {\n                // se è posizionato in centro nascondo la freccia\n                elDialog.classList.toggle('guideme-center',\n                    stepTarget.guidemeCenter === true);\n                // scroll automatico perché il target sia sempre visibile\n                //  non uso elDialog perché il suo posizionamento può essere ritardato da Popper\n                //  e in ogni caso potrebbe non essere visibile il target\n                if (stepTarget.scrollIntoView) {\n                    // ritardo di un poco perché su chrome (e forse su altri) \n                    //  lo scroll al primo step non funziona\n                    setTimeout(function() {\n                        stepTarget.scrollIntoView(false);\n                    }, 100);\n                }\n                cb && cb(elDialog, stepTarget, this);\n            }\n        });\n    }\n\n    function nvl(text, def) {\n        return !text || text.length === 0 ? def : text;\n    }\n\n    function resolveFunctionOrValue(fnOrVal, _this) {\n        if (typeof fnOrVal == 'function' || false) {\n            return fnOrVal.apply(_this, Array.prototype.slice.call(arguments, 2));\n        } else {\n            return fnOrVal;\n        }\n    }\n\n    // ritorna obj se del tipo previsto, oppure scatena un errore\n    function ofTypeOrThrow(obj, type, error) {\n        if (typeof obj == type || false) {\n            return obj;\n        } else {\n            throw error || 'Invalid type: must be a ' + type;\n        }\n    }\n\n    function stepComparer(stepA, stepB) {\n        if (isNaN(stepB.order)) return -1;\n        if (isNaN(stepA.order)) return 1;\n        return (+stepA.order || 0) - (+stepB.order || 0);\n    }\n\n    function elementToStep(element) {\n        return {\n            \"target\": element,\n            // se il valore dell'attributo data-guideme è vuoto uso title\n            \"content\": nvl(element.getAttribute('data-guideme'),\n                element.title),\n            \"order\": +element.getAttribute('data-guideme-order')\n        };\n    }\n\n    function stringToStep(value) {\n        return {\n            \"content\": nvl(value, '')\n        };\n    }\n\n    function normalizeStep(step, index) {\n        if (isNaN(step.order)) {\n            step.order = index;\n        }\n        return step;\n    }\n\n    // elemento di riferimento per posizionare Popper al centro dello schermo\n    function getPopperRererenceCenter(element) {\n        var modWidth = -element.clientWidth / 2,\n            modHeight = -element.clientHeight / 2;\n        return {\n            \"guidemeCenter\": true,\n            \"clientWidth\": 1,\n            \"clientHeight\": 1,\n            \"getBoundingClientRect\": function() {\n                var size = getWindowSize();\n                return {\n                    \"bottom\": size.height / 2 + modHeight,\n                    \"height\": 1,\n                    \"left\": size.width / 2 + modWidth,\n                    \"right\": size.width / 2 + modWidth,\n                    \"top\": size.height / 2 + modHeight,\n                    \"width\": 1\n                };\n            }\n        }\n    }\n\n    function formatStepCounter(format, index, length) {\n        if (format === true) {\n            return (index + 1) + '/' + length;\n        } else if (format) {\n            return format.replace(/%1/, (index + 1)).replace(/%2/, length);\n        } else {\n            return '';\n        }\n    }\n\n    var defaultOptions = {\n        attachTo: null,\n        classes: null,\n        title: null,\n        destroyOnDone: false,\n        allowKeyboardNavigation: true,\n        showOverlay: true,\n        showStepCounter: false,\n        overlayClickAction: 'done',\n        buttons: [\n            { \"text\": \"done\", \"action\": \"done\" },\n            { \"text\": \"prev\", \"action\": \"prev\" },\n            { \"text\": \"next\", \"action\": \"next\" }\n        ]\n    };\n\n    var elDialogHtml = '<div x-arrow></div><div class=\"guideme-header\"><span class=\"guideme-title\"></span><span class=\"guideme-step-counter\"></span></div><div class=\"guideme-body\"></div><div class=\"guideme-footer\"></div>';\n\n    /**\n     * Crea una guida.\n     * GuideMe().from('body').start();\n     *\n     * @param      {Object}  options  opzioni\n     * @return     {Object}  ritorna una istanza di guideme\n     */\n    function GuideMe(options) {\n        var elBody = document.querySelector('body'),\n            elOverloay, elDialog, elDialogTitle, elDialogStepCounter, elDialogBody, elDialogFooter,\n            stepList = [],\n            popper,\n            curStepIndex,\n            instance;\n\n        var onStep, onDone;\n\n        options = Object.assign({}, defaultOptions, options);\n        options.attachTo = parseElemnt(options.attachTo, elBody, true);\n        options.attachTo.classList.add('guideme');\n\n        // creo il div per mascherare la pagina\n        if (options.showOverlay) {\n            elOverloay = document.createElement('div');\n            elOverloay.innerHTML = '&nbsp;';\n            elOverloay.className = 'guideme-overlay ' + nvl(options.classes, '');\n            elOverloay.onclick = function() {\n                performAction((options.overlayClickAction || '').toString().toUpperCase());\n            }\n            options.attachTo.appendChild(elOverloay);\n        }\n\n        // creo il dialog\n        elDialog = document.createElement('div');\n        elDialog.innerHTML = elDialogHtml;\n        elDialog.className = 'guideme-dialog';\n        if (options.classes) {\n            elDialog.className += ' ' + nvl(options.classes, '');\n        }\n        elDialogTitle = elDialog.querySelector('.guideme-title');\n        elDialogStepCounter = elDialog.querySelector('.guideme-step-counter');\n        elDialogBody = elDialog.querySelector('.guideme-body');\n        elDialogFooter = elDialog.querySelector('.guideme-footer');\n        // se non ci sono pulsanti nascondo il footer\n        if (options.buttons && options.buttons.length > 0) {\n            options.buttons.map(function(btn) {\n                var elButton = document.createElement('button');\n                elButton.className = 'guideme-button';\n                elButton.innerHTML = btn.text;\n                elButton.setAttribute('data-action', btn.action);\n                elButton.onclick = function() {\n                    performAction((btn.action || '').toString().toUpperCase());\n                };\n                return elButton;\n            }).forEach(function(element) {\n                elDialogFooter.appendChild(element);\n            });\n        } else {\n            elDialog.className += ' guideme-no-footer';\n        }\n        options.attachTo.appendChild(elDialog);\n\n        /// funzioni interne ///\n\n        function onKeyDown(event) {\n            event.preventDefault();\n            // event.stopPropagation();\n            switch (event.keyCode || event.which) {\n                case 13: // enter\n                case 39: // arraow right\n                    performAction('NEXT');\n                    break;\n                case 8: // back\n                case 37: // arrow left\n                    performAction('PREV');\n                    break;\n                case 27: // esc\n                    performAction('DONE');\n                    break;\n            }\n        }\n\n        function performAction(action) {\n            switch (action) {\n                case 'NEXT':\n                    showStep((+curStepIndex || 0) + 1);\n                    break;\n                case 'PREV':\n                    showStep((+curStepIndex || 0) - 1);\n                    break;\n                case 'DONE':\n                    done();\n                    break;\n            }\n        }\n\n        function showStep(index) {\n            if (index < 0) return;\n            // pulisco il tag dello step precedente\n            if (!isNaN(curStepIndex)) {\n                cleanStepElement(+curStepIndex);\n            }\n            // se non ci sono più step da mostrare termino la guida\n            if (index >= stepList.length) {\n                done();\n                return;\n            }\n\n            curStepIndex = index;\n\n            var step = stepList[index];\n            elDialogTitle.innerHTML = nvl(resolveFunctionOrValue(options.title, instance, index, step), '');\n            if (options.showStepCounter) {\n                elDialogStepCounter.innerHTML = formatStepCounter(resolveFunctionOrValue(options.showStepCounter, instance), index, stepList.length);\n            }\n            elDialogBody.innerHTML = nvl(resolveFunctionOrValue(step.content, instance, index, step), '');\n            elDialog.classList.toggle('guideme-start', index === 0);\n            elDialog.classList.toggle('guideme-end', index === stepList.length - 1);\n            if (step.target) {\n                step.target.classList.add('guideme-step-target');\n                popper && popper.destroy();\n                // posiziono il dialogo rispetto al tag di riferimento\n                popper = createPopper(elDialog, step.target, onStep);\n            } else {\n                popper && popper.destroy();\n                // posiziono al centro dello schermo\n                popper = createPopper(elDialog, getPopperRererenceCenter(elDialog), onStep);\n            }\n        }\n\n        function cleanStepElement(index) {\n            if (stepList[index].target) {\n                stepList[index].target.classList.remove('guideme-step-target');\n            }\n        }\n\n        function setupEvents() {\n            // gestisco gli eventi per la navigazione\n            if (options.allowKeyboardNavigation) {\n                window.addEventListener('keydown', onKeyDown);\n            }\n        }\n\n        function cleanEvents() {\n            if (options.allowKeyboardNavigation) {\n                window.removeEventListener('keydown', onKeyDown);\n            }\n        }\n\n        function createOnStep(cb) {\n            return function(target, stepTarget, popper) {\n                cb(stepList[curStepIndex], curStepIndex, target, stepTarget, popper);\n            };\n        }\n\n        function createOnDone(cb) {\n            return function() {\n                // richiamo cb indicando se gli step sono finiti o se la sequenza è stata interrotta\n                cb(curStepIndex === stepList.length - 1);\n            }\n        }\n\n        function done() {\n            cleanEvents();\n            if (!isNaN(curStepIndex)) {\n                cleanStepElement(+curStepIndex);\n            }\n            options.attachTo.classList.remove('guideme-show');\n            popper && popper.destroy();\n            onDone && onDone();\n            if (options.destroyOnDone) {\n                destroy();\n            }\n        }\n\n        function destroy() {\n            if (elOverloay) {\n                options.attachTo.removeChild(elOverloay);\n            }\n            options.attachTo.removeChild(elDialog);\n            options.attachTo.classList.remove('guideme', 'guideme-show');\n            stepList = elBody = elOverloay = elDialog =\n                elDialogTitle = elDialogStepCounter =\n                elDialogBody = elDialogFooter =\n                null;\n        }\n\n        // creo l'istanza da ritornare con la funzione\n        instance = {\n            /**\n             * Individua gli elementi con l'attributo [data-guideme] e li aggiunge come step.\n             * Vengono considerati gli elementi stessi individuati da \"from\" che il loro contenuto.\n             *\n             * @param      {HTMLElement, NodeList, selector, jQuery}  selector  uno o più elementi a partire dai quali creare gli step\n             * @return     {Object}  this\n             */\n            from: function(selector) {\n                var els = parseSelector(selector),\n                    elStepList;\n                // console.log(selector, els); \n                if (els) {\n                    for (var ii = 0; ii < els.length; ii++) {\n                        // se l'elemento è [data-guideme] lo aggiungo\n                        if (els[ii].hasAttribute('data-guideme')) {\n                            stepList.push(normalizeStep(elementToStep(els[ii]), stepList.length));\n                        }\n                        // cerco al suo interno tutti gli elementi con [data-guideme]\n                        elStepList = els[ii].querySelectorAll('[data-guideme]');\n                        for (var jj = 0; jj < elStepList.length; jj++) {\n                            stepList.push(normalizeStep(elementToStep(elStepList[jj]), stepList.length));\n                        }\n                    }\n                }\n                return this;\n            },\n            /**\n             * Aggiunge uno step.\n             * Lo step può essere uno Step, una funzione che ritorna uno Step, \n             * o una stringa che diverrà il contenuto di uno Step senza elememnto.\n             *\n             * @param      {string|Object|Function}  step    lo step\n             * @return     {Object}  this\n             */\n            addStep: function(step) {\n                if (typeof step == 'string') {\n                    stepList.push(normalizeStep(stringToStep(step), stepList.length));\n                } else {\n                    stepList.push(normalizeStep(resolveFunctionOrValue(step, this), stepList.length));\n                }\n                return this;\n            },\n            start: function(initialStep) {\n                stepList.sort(stepComparer);\n                // console.log(stepList)\n                setupEvents();\n                showStep(+initialStep || 0)\n                options.attachTo.classList.add('guideme', 'guideme-show');\n                return this;\n            },\n            // exec: function(action) {\n            //     performAction((action || '').toString().toUpperCase())\n            //     return this;\n            // },\n            end: function() {\n                done();\n                return this;\n            },\n            destroy: function() {\n                done();\n                destroy();\n                return this;\n            },\n            /**\n             * Richiama la callback al cambio di step.\n             * All'interno della callback this si riferisce a questa istanza.\n             *\n             * @param      {Function}  cb      callback(step, index, target, stepTarget, popper)\n             * @return     {Object}    this\n             */\n            onStep: function(cb) {\n                if (!cb) {\n                    onStep = null;\n                } else {\n                    // creo una funzione che al suo interno richiama cb bindata a this\n                    onStep = createOnStep(ofTypeOrThrow(cb, 'function', 'cb must be a function').bind(this));\n                }\n                return this;\n            },\n            /**\n             * Richiama la callback al termine della sequenza, anche se interrotta.\n             * All'interno della callback this si riferisce a questa istanza.\n             *\n             * @param      {Function}  cb      callback(finished: boolean)\n             * @return     {Object}    this\n             */\n            onDone: function(cb) {\n                if (!cb) {\n                    onDone = null;\n                } else {\n                    // creo una funzione che al suo interno richiama cb bindata a this\n                    onDone = createOnDone(ofTypeOrThrow(cb, 'function', 'cb must be a function').bind(this));\n                }\n                return this;\n            },\n            stepAt: function(index) {\n                return stepList[+index];\n            }\n        };\n\n        // proprietà in sola lettura\n        Object.defineProperty(instance, 'stepCount', {\n            \"get\": function() {\n                return stepList.length;\n            }\n        });\n        Object.defineProperty(instance, 'stepIndex', {\n            \"get\": function() {\n                return curStepIndex;\n            }\n        });\n\n        return instance;\n    }\n\n    return GuideMe;\n})));\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__guideme_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__guideme_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__guideme_js__);\n\n\nwindow.GuideMe = __WEBPACK_IMPORTED_MODULE_0__guideme_js___default.a;\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// guideme-alone.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 47febb8d6b9e93133a3e","// import styles from './guideme.css'\n// import themeStyles from './guideme-theme.css'\n// import Popper from 'popper.js';\n\n(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n        typeof define === 'function' && define.amd ? define(factory) :\n        (global.GuideMe = factory());\n}(this, (function() {\n    'use strict';\n\n    var $ = window && window.jQuery;\n\n    // @see https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    if (!Object.assign) {\n        Object.defineProperty(Object, 'assign', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: function(target, firstSource) {\n                'use strict';\n                if (target === undefined || target === null) {\n                    throw new TypeError('Cannot convert first argument to object');\n                }\n\n                var to = Object(target);\n                for (var i = 1; i < arguments.length; i++) {\n                    var nextSource = arguments[i];\n                    if (nextSource === undefined || nextSource === null) {\n                        continue;\n                    }\n                    nextSource = Object(nextSource);\n\n                    var keysArray = Object.keys(Object(nextSource));\n                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                        var nextKey = keysArray[nextIndex];\n                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                        if (desc !== undefined && desc.enumerable) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n                return to;\n            }\n        });\n    }\n\n    function parseElemnt(element, defaultElement, fallToDefault) {\n        if (!element) {\n            return defaultElement;\n        } else if (element instanceof HTMLElement) {\n            return element;\n        } else if (element instanceof NodeList) {\n            return element[0];\n        } else if (typeof element == 'string') {\n            return document.querySelector(element);\n        } else if ($ && element.jquery) {\n            return element.get(0);\n        } else if (fallToDefault) {\n            return defaultElement;\n        } else {\n            return null;\n        }\n    }\n\n    // ritorna null o un array di elementi\n    function parseSelector(selector) {\n        if (!selector) {\n            return null;\n        } else if (selector instanceof HTMLElement) {\n            return [selector];\n        } else if (selector instanceof NodeList) {\n            return selector;\n        } else if (typeof selector == 'string') {\n            return document.querySelectorAll(selector);\n        } else if ($ && selector.jquery) {\n            return selector.get();\n        } else {\n            return null;\n        }\n    }\n\n    function getBodySize() {\n        var w = document.body.clientWidth,\n            h = document.body.clientHeight;\n        return { \"width\": w, \"height\": h };\n    }\n\n    function getWindowSize() {\n        var e = document.documentElement,\n            g = document.getElementsByTagName('body')[0],\n            w = window.innerWidth || e.clientWidth || g.clientWidth,\n            h = window.innerHeight || e.clientHeight || g.clientHeight;\n        return { \"width\": w, \"height\": h };\n    }\n\n    function createPopper(elDialog, stepTarget, cb) {\n        return new Popper(stepTarget, elDialog, {\n            \"placement\": \"bottom-start\",\n            \"onCreate\": function(dataObject) {\n                // se è posizionato in centro nascondo la freccia\n                elDialog.classList.toggle('guideme-center',\n                    stepTarget.guidemeCenter === true);\n                // scroll automatico perché il target sia sempre visibile\n                //  non uso elDialog perché il suo posizionamento può essere ritardato da Popper\n                //  e in ogni caso potrebbe non essere visibile il target\n                if (stepTarget.scrollIntoView) {\n                    // ritardo di un poco perché su chrome (e forse su altri) \n                    //  lo scroll al primo step non funziona\n                    setTimeout(function() {\n                        stepTarget.scrollIntoView(false);\n                    }, 100);\n                }\n                cb && cb(elDialog, stepTarget, this);\n            }\n        });\n    }\n\n    function nvl(text, def) {\n        return !text || text.length === 0 ? def : text;\n    }\n\n    function resolveFunctionOrValue(fnOrVal, _this) {\n        if (typeof fnOrVal == 'function' || false) {\n            return fnOrVal.apply(_this, Array.prototype.slice.call(arguments, 2));\n        } else {\n            return fnOrVal;\n        }\n    }\n\n    // ritorna obj se del tipo previsto, oppure scatena un errore\n    function ofTypeOrThrow(obj, type, error) {\n        if (typeof obj == type || false) {\n            return obj;\n        } else {\n            throw error || 'Invalid type: must be a ' + type;\n        }\n    }\n\n    function stepComparer(stepA, stepB) {\n        if (isNaN(stepB.order)) return -1;\n        if (isNaN(stepA.order)) return 1;\n        return (+stepA.order || 0) - (+stepB.order || 0);\n    }\n\n    function elementToStep(element) {\n        return {\n            \"target\": element,\n            // se il valore dell'attributo data-guideme è vuoto uso title\n            \"content\": nvl(element.getAttribute('data-guideme'),\n                element.title),\n            \"order\": +element.getAttribute('data-guideme-order')\n        };\n    }\n\n    function stringToStep(value) {\n        return {\n            \"content\": nvl(value, '')\n        };\n    }\n\n    function normalizeStep(step, index) {\n        if (isNaN(step.order)) {\n            step.order = index;\n        }\n        return step;\n    }\n\n    // elemento di riferimento per posizionare Popper al centro dello schermo\n    function getPopperRererenceCenter(element) {\n        var modWidth = -element.clientWidth / 2,\n            modHeight = -element.clientHeight / 2;\n        return {\n            \"guidemeCenter\": true,\n            \"clientWidth\": 1,\n            \"clientHeight\": 1,\n            \"getBoundingClientRect\": function() {\n                var size = getWindowSize();\n                return {\n                    \"bottom\": size.height / 2 + modHeight,\n                    \"height\": 1,\n                    \"left\": size.width / 2 + modWidth,\n                    \"right\": size.width / 2 + modWidth,\n                    \"top\": size.height / 2 + modHeight,\n                    \"width\": 1\n                };\n            }\n        }\n    }\n\n    function formatStepCounter(format, index, length) {\n        if (format === true) {\n            return (index + 1) + '/' + length;\n        } else if (format) {\n            return format.replace(/%1/, (index + 1)).replace(/%2/, length);\n        } else {\n            return '';\n        }\n    }\n\n    var defaultOptions = {\n        attachTo: null,\n        classes: null,\n        title: null,\n        destroyOnDone: false,\n        allowKeyboardNavigation: true,\n        showOverlay: true,\n        showStepCounter: false,\n        overlayClickAction: 'done',\n        buttons: [\n            { \"text\": \"done\", \"action\": \"done\" },\n            { \"text\": \"prev\", \"action\": \"prev\" },\n            { \"text\": \"next\", \"action\": \"next\" }\n        ]\n    };\n\n    var elDialogHtml = '<div x-arrow></div><div class=\"guideme-header\"><span class=\"guideme-title\"></span><span class=\"guideme-step-counter\"></span></div><div class=\"guideme-body\"></div><div class=\"guideme-footer\"></div>';\n\n    /**\n     * Crea una guida.\n     * GuideMe().from('body').start();\n     *\n     * @param      {Object}  options  opzioni\n     * @return     {Object}  ritorna una istanza di guideme\n     */\n    function GuideMe(options) {\n        var elBody = document.querySelector('body'),\n            elOverloay, elDialog, elDialogTitle, elDialogStepCounter, elDialogBody, elDialogFooter,\n            stepList = [],\n            popper,\n            curStepIndex,\n            instance;\n\n        var onStep, onDone;\n\n        options = Object.assign({}, defaultOptions, options);\n        options.attachTo = parseElemnt(options.attachTo, elBody, true);\n        options.attachTo.classList.add('guideme');\n\n        // creo il div per mascherare la pagina\n        if (options.showOverlay) {\n            elOverloay = document.createElement('div');\n            elOverloay.innerHTML = '&nbsp;';\n            elOverloay.className = 'guideme-overlay ' + nvl(options.classes, '');\n            elOverloay.onclick = function() {\n                performAction((options.overlayClickAction || '').toString().toUpperCase());\n            }\n            options.attachTo.appendChild(elOverloay);\n        }\n\n        // creo il dialog\n        elDialog = document.createElement('div');\n        elDialog.innerHTML = elDialogHtml;\n        elDialog.className = 'guideme-dialog';\n        if (options.classes) {\n            elDialog.className += ' ' + nvl(options.classes, '');\n        }\n        elDialogTitle = elDialog.querySelector('.guideme-title');\n        elDialogStepCounter = elDialog.querySelector('.guideme-step-counter');\n        elDialogBody = elDialog.querySelector('.guideme-body');\n        elDialogFooter = elDialog.querySelector('.guideme-footer');\n        // se non ci sono pulsanti nascondo il footer\n        if (options.buttons && options.buttons.length > 0) {\n            options.buttons.map(function(btn) {\n                var elButton = document.createElement('button');\n                elButton.className = 'guideme-button';\n                elButton.innerHTML = btn.text;\n                elButton.setAttribute('data-action', btn.action);\n                elButton.onclick = function() {\n                    performAction((btn.action || '').toString().toUpperCase());\n                };\n                return elButton;\n            }).forEach(function(element) {\n                elDialogFooter.appendChild(element);\n            });\n        } else {\n            elDialog.className += ' guideme-no-footer';\n        }\n        options.attachTo.appendChild(elDialog);\n\n        /// funzioni interne ///\n\n        function onKeyDown(event) {\n            event.preventDefault();\n            // event.stopPropagation();\n            switch (event.keyCode || event.which) {\n                case 13: // enter\n                case 39: // arraow right\n                    performAction('NEXT');\n                    break;\n                case 8: // back\n                case 37: // arrow left\n                    performAction('PREV');\n                    break;\n                case 27: // esc\n                    performAction('DONE');\n                    break;\n            }\n        }\n\n        function performAction(action) {\n            switch (action) {\n                case 'NEXT':\n                    showStep((+curStepIndex || 0) + 1);\n                    break;\n                case 'PREV':\n                    showStep((+curStepIndex || 0) - 1);\n                    break;\n                case 'DONE':\n                    done();\n                    break;\n            }\n        }\n\n        function showStep(index) {\n            if (index < 0) return;\n            // pulisco il tag dello step precedente\n            if (!isNaN(curStepIndex)) {\n                cleanStepElement(+curStepIndex);\n            }\n            // se non ci sono più step da mostrare termino la guida\n            if (index >= stepList.length) {\n                done();\n                return;\n            }\n\n            curStepIndex = index;\n\n            var step = stepList[index];\n            elDialogTitle.innerHTML = nvl(resolveFunctionOrValue(options.title, instance, index, step), '');\n            if (options.showStepCounter) {\n                elDialogStepCounter.innerHTML = formatStepCounter(resolveFunctionOrValue(options.showStepCounter, instance), index, stepList.length);\n            }\n            elDialogBody.innerHTML = nvl(resolveFunctionOrValue(step.content, instance, index, step), '');\n            elDialog.classList.toggle('guideme-start', index === 0);\n            elDialog.classList.toggle('guideme-end', index === stepList.length - 1);\n            if (step.target) {\n                step.target.classList.add('guideme-step-target');\n                popper && popper.destroy();\n                // posiziono il dialogo rispetto al tag di riferimento\n                popper = createPopper(elDialog, step.target, onStep);\n            } else {\n                popper && popper.destroy();\n                // posiziono al centro dello schermo\n                popper = createPopper(elDialog, getPopperRererenceCenter(elDialog), onStep);\n            }\n        }\n\n        function cleanStepElement(index) {\n            if (stepList[index].target) {\n                stepList[index].target.classList.remove('guideme-step-target');\n            }\n        }\n\n        function setupEvents() {\n            // gestisco gli eventi per la navigazione\n            if (options.allowKeyboardNavigation) {\n                window.addEventListener('keydown', onKeyDown);\n            }\n        }\n\n        function cleanEvents() {\n            if (options.allowKeyboardNavigation) {\n                window.removeEventListener('keydown', onKeyDown);\n            }\n        }\n\n        function createOnStep(cb) {\n            return function(target, stepTarget, popper) {\n                cb(stepList[curStepIndex], curStepIndex, target, stepTarget, popper);\n            };\n        }\n\n        function createOnDone(cb) {\n            return function() {\n                // richiamo cb indicando se gli step sono finiti o se la sequenza è stata interrotta\n                cb(curStepIndex === stepList.length - 1);\n            }\n        }\n\n        function done() {\n            cleanEvents();\n            if (!isNaN(curStepIndex)) {\n                cleanStepElement(+curStepIndex);\n            }\n            options.attachTo.classList.remove('guideme-show');\n            popper && popper.destroy();\n            onDone && onDone();\n            if (options.destroyOnDone) {\n                destroy();\n            }\n        }\n\n        function destroy() {\n            if (elOverloay) {\n                options.attachTo.removeChild(elOverloay);\n            }\n            options.attachTo.removeChild(elDialog);\n            options.attachTo.classList.remove('guideme', 'guideme-show');\n            stepList = elBody = elOverloay = elDialog =\n                elDialogTitle = elDialogStepCounter =\n                elDialogBody = elDialogFooter =\n                null;\n        }\n\n        // creo l'istanza da ritornare con la funzione\n        instance = {\n            /**\n             * Individua gli elementi con l'attributo [data-guideme] e li aggiunge come step.\n             * Vengono considerati gli elementi stessi individuati da \"from\" che il loro contenuto.\n             *\n             * @param      {HTMLElement, NodeList, selector, jQuery}  selector  uno o più elementi a partire dai quali creare gli step\n             * @return     {Object}  this\n             */\n            from: function(selector) {\n                var els = parseSelector(selector),\n                    elStepList;\n                // console.log(selector, els); \n                if (els) {\n                    for (var ii = 0; ii < els.length; ii++) {\n                        // se l'elemento è [data-guideme] lo aggiungo\n                        if (els[ii].hasAttribute('data-guideme')) {\n                            stepList.push(normalizeStep(elementToStep(els[ii]), stepList.length));\n                        }\n                        // cerco al suo interno tutti gli elementi con [data-guideme]\n                        elStepList = els[ii].querySelectorAll('[data-guideme]');\n                        for (var jj = 0; jj < elStepList.length; jj++) {\n                            stepList.push(normalizeStep(elementToStep(elStepList[jj]), stepList.length));\n                        }\n                    }\n                }\n                return this;\n            },\n            /**\n             * Aggiunge uno step.\n             * Lo step può essere uno Step, una funzione che ritorna uno Step, \n             * o una stringa che diverrà il contenuto di uno Step senza elememnto.\n             *\n             * @param      {string|Object|Function}  step    lo step\n             * @return     {Object}  this\n             */\n            addStep: function(step) {\n                if (typeof step == 'string') {\n                    stepList.push(normalizeStep(stringToStep(step), stepList.length));\n                } else {\n                    stepList.push(normalizeStep(resolveFunctionOrValue(step, this), stepList.length));\n                }\n                return this;\n            },\n            start: function(initialStep) {\n                stepList.sort(stepComparer);\n                // console.log(stepList)\n                setupEvents();\n                showStep(+initialStep || 0)\n                options.attachTo.classList.add('guideme', 'guideme-show');\n                return this;\n            },\n            // exec: function(action) {\n            //     performAction((action || '').toString().toUpperCase())\n            //     return this;\n            // },\n            end: function() {\n                done();\n                return this;\n            },\n            destroy: function() {\n                done();\n                destroy();\n                return this;\n            },\n            /**\n             * Richiama la callback al cambio di step.\n             * All'interno della callback this si riferisce a questa istanza.\n             *\n             * @param      {Function}  cb      callback(step, index, target, stepTarget, popper)\n             * @return     {Object}    this\n             */\n            onStep: function(cb) {\n                if (!cb) {\n                    onStep = null;\n                } else {\n                    // creo una funzione che al suo interno richiama cb bindata a this\n                    onStep = createOnStep(ofTypeOrThrow(cb, 'function', 'cb must be a function').bind(this));\n                }\n                return this;\n            },\n            /**\n             * Richiama la callback al termine della sequenza, anche se interrotta.\n             * All'interno della callback this si riferisce a questa istanza.\n             *\n             * @param      {Function}  cb      callback(finished: boolean)\n             * @return     {Object}    this\n             */\n            onDone: function(cb) {\n                if (!cb) {\n                    onDone = null;\n                } else {\n                    // creo una funzione che al suo interno richiama cb bindata a this\n                    onDone = createOnDone(ofTypeOrThrow(cb, 'function', 'cb must be a function').bind(this));\n                }\n                return this;\n            },\n            stepAt: function(index) {\n                return stepList[+index];\n            }\n        };\n\n        // proprietà in sola lettura\n        Object.defineProperty(instance, 'stepCount', {\n            \"get\": function() {\n                return stepList.length;\n            }\n        });\n        Object.defineProperty(instance, 'stepIndex', {\n            \"get\": function() {\n                return curStepIndex;\n            }\n        });\n\n        return instance;\n    }\n\n    return GuideMe;\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/guideme.js\n// module id = 0\n// module chunks = 0 1","import GuideMe from './guideme.js';\n\nwindow.GuideMe = GuideMe;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/guideme-alone.js\n// module id = 7\n// module chunks = 1"],"sourceRoot":""}